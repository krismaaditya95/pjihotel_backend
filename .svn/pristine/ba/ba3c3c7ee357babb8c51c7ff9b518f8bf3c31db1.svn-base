package com.mini.project.hotel.services;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mini.project.hotel.controller.CustomerRESTController;
import com.mini.project.hotel.controller.TransaksiRESTController;
import com.mini.project.hotel.model.Customer;
import com.mini.project.hotel.model.Kamar;
import com.mini.project.hotel.model.Pengguna;
import com.mini.project.hotel.model.TipeKamar;
import com.mini.project.hotel.model.Transaksi;
import com.mini.project.hotel.repository.CustomerRepository;
import com.mini.project.hotel.repository.KamarRepository;
import com.mini.project.hotel.repository.PenggunaRepository;
import com.mini.project.hotel.repository.TipeKamarRepository;
import com.mini.project.hotel.repository.TransaksiRepository;

@Service
public class TransaksiService {
	@Autowired
	TransaksiRESTController rest;
	
	@Autowired
	CustomerRESTController custRest;
	
	@Autowired
	TransaksiRepository transaksiRepo;
	
	@Autowired
	CustomerRepository custRepo;
	
	@Autowired
	KamarRepository kamarRepo;
	
//	@Autowired
//	PenggunaRepository userRepo;
	
	@Autowired
	TipeKamarRepository tipeKamarRepo;
	
	@Autowired
	CustomerService custServ;
	
	//private static List<Transaksi> transactions = new ArrayList<Transaksi>();
	
	DateFormat date = new SimpleDateFormat("yyyy-MM-dd");
	DateFormat time = new SimpleDateFormat("HH:mm");
	
	//makai rest controller
//	public List<Transaksi> viewTransaksi(){
//		List<Transaksi> transaksis = rest.getAllTransaksi();
//		return transaksis;
//	}
	
	// pake repo
	public List<Transaksi> getAllTransaksi(){
		List<Transaksi> transaksis = transaksiRepo.findAll();
		return transaksis;
	}
	
	public List<Kamar> getAllKamar(){
		List<Kamar> kamar = kamarRepo.findAll();
		return kamar;
	}
	
//	public List<Pengguna> getAllPengguna(){
//		List<Pengguna> users = userRepo.findAll();
//		return users;
//	}
	
	public List<TipeKamar> getAllTipeKamar(){
		List<TipeKamar> tipekamar = tipeKamarRepo.findAll();
		return tipekamar;
	}
	
	// pake repo
//	public Transaksi createTransaksi(int id_customer, int id_room, String check_in_date, String check_in_time, String check_out_date, String check_out_time, int id_status_check, int total_harga) throws ParseException {
//		//Transaksi newtransaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi transaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi newtransaksi = transaksiRepo.save(transaksi);
//		return newtransaksi;
//	}
	
	public Transaksi createTransaksi(int id_customer, int id_room, String check_in_date, String check_in_time, String check_out_date, String check_out_time, int id_status_check, int total_harga) throws ParseException {
		//Transaksi newtransaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
		Transaksi transaksi = new Transaksi(check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi newtransaksi = transaksiRepo.save(transaksi);
//		return newtransaksi;
		
		
		Customer customer = custRepo.findOneByIdCustomer(id_customer);
		Kamar kamar = kamarRepo.findOneByIdKamar(id_room);
		
//		Customer customer = custServ.getCustomerByIds(id_customer);
//		Room room = roomServ.getRoomById(id_room);
		
		
//		Optional<Customer> customer = custRepo.findById(id_customer);
//		Optional<Room> room = roomRepo.findById(id_room);
		
//		ResponseEntity<Customer> customer = custRest.getCustomerById(id_customer);
		transaksi.setCustomer(customer);
		transaksi.setKamar(kamar);
		
		return transaksiRepo.save(transaksi);
	}
	// make repo > set customer
//	public Transaksi createTransaksi(Customer customer, int id_room, String check_in_date, String check_in_time, String check_out_date, String check_out_time, int id_status_check, int total_harga) throws ParseException {
//		//Transaksi newtransaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi transaksi = new Transaksi(customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi newtransaksi = transaksiRepo.save(transaksi);
//		transaksi.setCustomer(customer);
//		return newtransaksi;
//	}
	
//	public Transaksi addTransaksi(int id_customer, int id_room, DateFormat check_in_date, DateFormat check_in_time, DateFormat check_out_date, DateFormat check_out_time, int id_status_check, int total_harga) {
//		//Transaksi newtransaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi transaksi = new Transaksi(id_customer, id_room, check_in_date, check_in_time, check_out_date, check_out_time, id_status_check, total_harga);
//		Transaksi newtransaksi = rest.createCustomer(transaksi);
//		return newtransaksi;
//	}
	
	public Kamar getKamarByIds(int id_room){
		Kamar kamar = kamarRepo.findOneByIdKamar(id_room);
		return kamar;
	}
}
